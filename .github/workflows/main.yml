name: "Build NuvlaEdge Common Library"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'main'
    paths:
      - 'nuvlaedge/'
      - 'tests/'
      - '.github/workflows/main.yml'

jobs:
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SetUp python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install tox
        run: pip install tox

      - name: Run tox
        run: tox

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-report.xml

  build-library:
    needs: tests
    name: Build Common Library
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: SetUp python interpreter
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Load cached poetry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/workflows/main.yml') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build package
        run: |
          poetry build --format=wheel

      - name: Find package name and version
        run: |
          cd dist/
          echo "PACKAGE_NAME=$(ls nuvlaedge_common-*.whl)" >> $GITHUB_ENV

      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuvlaedge-common-lib
          path: dist/${{ env.PACKAGE_NAME }}

  build-base-image:
    needs: build-library
    name: Build NE base image

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: nuvlaedge-common-lib

      # Use QeMu for multi-architecture build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Docker meta
#        id: metadata # you'll use this in the next step
#        uses: docker/metadata-action@v3
#        with:
#          # list of Docker images to use as base name for tags
#          images: |
#            nuvlaedge-common
#          # Docker tags based on the following events/attributes
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm/v8,linux/arm64
          build-args: |
            GIT_BRANCH=${{ github.head_ref || github.ref_name }}
            GIT_BUILD_TIME=$(date --utc +%FT%T.%3NZ)
            GIT_COMMIT_ID=${{ github.sha }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            GITHUB_RUN_ID=${{ github.run_id }}
            PROJECT_URL=${{ github.server_url }}/${{ github.repository }}
            PACKAGE_NAME=${{ env.PACKAGE_NAME }}

          tags: nuvladev/nuvlaedge-base:${{ github.head_ref || github.ref_name }},nuvladev/nuvlaedge-base:latest
          push: true

